/* 分治法求a[m]~a[n]中最大值的递归函数 */
int max(int a[ ], int m, int n)
{
    int k, u, v;
    if (m == n) {
       return a[m]; 
    }
    k = (m + n) / 2; 	       /* 计算中间元素的下标k */
    u = max(a, m, k);	       /* 在a[m]~a[k]中找出最大值 */
    v = max(a, k+1, n);    /* 在a[k+1]~a[n]中找出最大值*/

    return (u > v) ? u : v;       /* 返回u和v中较大的值 */
}
